{"version":3,"sources":["../src/datasource.js"],"names":["_","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","options","query","buildQueryParameters","targets","filter","t","hide","length","when","data","start","Number","range","from","toDate","getTime","toFixed","end","to","x","target","host","_fixup_regex","service","perflabel","This","datasourceRequest","method","headers","then","result","dataQueryMapper","k","res","alias","scopedVars","tag_host","value","tag_service","tag_perflabel","tag_label","replace","datapoints","y","pop","fill","undefined","push","matches","match","values","split","join","response","status","message","title","mapper","mapToTextValueHost","mapToTextValueService","mapToTextValuePerflabel","variables","unshift","text","map","hosts","d","i","services","labels","refId"],"mappings":"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","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n  }\n\n  query(options) {\n    var query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    query.start = Number(options.range.from.toDate().getTime() / 1000).toFixed();\n    query.end   = Number(options.range.to.toDate().getTime() / 1000).toFixed();\n\n    /* fixup regex syntax in query targets */\n    for(var x=0; x<query.targets.length; x++) {\n      var target = query.targets[x];\n      target.host      = this._fixup_regex(target.host);\n      target.service   = this._fixup_regex(target.service);\n      target.perflabel = this._fixup_regex(target.perflabel);\n    }\n\n    var This = this;\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/index.php/api/metrics',\n      data: query,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(function(result) { return(This.dataQueryMapper(result, options)) });\n  }\n\n  dataQueryMapper(result, options) {\n    var data = {data:[]};\n    for(var x=0; x < result.data.targets.length; x++) {\n      for(var k=0; k < result.data.targets[x].length; k++) {\n        var target = options.targets[x];\n        var res    = result.data.targets[x][k];\n        var alias = target.perflabel;\n        if(target.alias) {\n          alias = target.alias;\n          var scopedVars = {\n            tag_host      : {value: res.host},\n            tag_service   : {value: res.service},\n            tag_perflabel : {value: res.perflabel},\n            tag_label     : {value: res.perflabel}\n          };\n          alias = this.templateSrv.replace(alias, scopedVars);\n        }\n        var datapoints = res.datapoints;\n        var length     = datapoints.length;\n        // remove the last few \"null\" values from the series because the last value is quite often null\n        // and would break current value in legend tables\n        for(var y=1; y < 5; y++) {\n          if(length > y && datapoints[length-y][0] === null) {\n            datapoints.pop();\n          } else {\n            break;\n          }\n        }\n        var length = datapoints.length;\n        var fill   = options.targets[x].fill;\n        if(fill != \"fill\") {\n          if(fill == \"zero\") { fill = 0; }\n          if(fill == \"gap\")  { fill = undefined; }\n          for(var y=0; y<length; y++) {\n            if(datapoints[y][0] === null) {\n              datapoints[y][0] = fill;\n            }\n          }\n        }\n        data.data.push({\n          \"target\": alias,\n          \"datapoints\": datapoints\n        });\n      }\n    }\n    return(data);\n  }\n\n  _fixup_regex(value) {\n    var matches = value.match(/^\\/\\^\\{(.*)\\}\\$\\/$/);\n    if(!matches) { return(value); }\n    var values = matches[1].split(/,/);\n    return('/^('+values.join('|')+')$/');\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/index.php/api',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  metricFindQuery(options, type) {\n    var This = this;\n    var mapper = this.mapToTextValueHost;\n    var url    = this.url + '/index.php/api/hosts';\n    if(type == \"service\") {\n      url    = this.url + '/index.php/api/services/'+options.host,\n      mapper = this.mapToTextValueService;\n    }\n    if(type == \"perflabel\") {\n      url    = this.url + '/index.php/api/labels/'+options.host+'/'+options.service,\n      mapper = this.mapToTextValuePerflabel;\n    }\n\n    return this.backendSrv.datasourceRequest({\n      url:     url,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(mapper)\n    .then(function(data) {\n      /* prepend templating variables */\n      for(var x=0; x<This.templateSrv.variables.length; x++) {\n        data.unshift({ text:  '/^$'+This.templateSrv.variables[x].name+'$/',\n                       value: '/^$'+This.templateSrv.variables[x].name+'$/' });\n      }\n      return(data);\n    });\n  }\n\n  mapToTextValueHost(result) {\n    return _.map(result.data.hosts, (d, i) => {\n      return { text: d.name, value: d.name };\n    });\n  }\n\n  mapToTextValueService(result) {\n    return _.map(result.data.services, (d, i) => {\n      return { text: d.name, value: d.name };\n    });\n  }\n\n  mapToTextValuePerflabel(result) {\n    return _.map(result.data.labels, (d, i) => {\n      return { text: d.name, value: d.name };\n    });\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.host !== 'select host';\n    });\n    options.targets = _.filter(options.targets, target => {\n      return target.service !== 'select service';\n    });\n    options.targets = _.filter(options.targets, target => {\n      return target.perflabel !== 'select performance label';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        host: this.templateSrv.replace(target.host),\n        service: this.templateSrv.replace(target.service),\n        perflabel: this.templateSrv.replace(target.perflabel),\n        alias: this.templateSrv.replace(target.alias),\n        type: this.templateSrv.replace(target.type),\n        fill: this.templateSrv.replace(target.fill),\n        refId: target.refId,\n        hide: target.hide\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n}\n"]}