{"version":3,"sources":["../src/datasource.js"],"names":["_","GenericDatasource","instanceSettings","$q","backendSrv","templateSrv","type","url","name","q","options","query","buildQueryParameters","targets","filter","t","hide","length","when","data","res","i","pnpQuery","target","me","datasourceRequest","host","service","perflabel","Number","range","from","toDate","getTime","toFixed","to","method","headers","then","result","dataQueryMapper","alias","push","datapoints","response","status","message","title","interpolated","replace","mapper","mapToTextValueHost","mapToTextValueService","mapToTextValuePerflabel","map","hosts","d","text","value","services","labels","refId"],"mappings":";;;;;;;;;;;;;;;AAAOA,O;;;;;;;;;;;;;;;;;;;;;mCAEMC,iB;AAEX,mCAAYC,gBAAZ,EAA8BC,EAA9B,EAAkCC,UAAlC,EAA8CC,WAA9C,EAA2D;AAAA;;AACzD,eAAKC,IAAL,GAAYJ,iBAAiBI,IAA7B;AACA,eAAKC,GAAL,GAAWL,iBAAiBK,GAA5B;AACA,eAAKC,IAAL,GAAYN,iBAAiBM,IAA7B;AACA,eAAKC,CAAL,GAASN,EAAT;AACA,eAAKC,UAAL,GAAkBA,UAAlB;AACA,eAAKC,WAAL,GAAmBA,WAAnB;AACD;;;;gCAEKK,O,EAAS;AACb,gBAAIC,QAAQ,KAAKC,oBAAL,CAA0BF,OAA1B,CAAZ;AACAC,kBAAME,OAAN,GAAgBF,MAAME,OAAN,CAAcC,MAAd,CAAqB;AAAA,qBAAK,CAACC,EAAEC,IAAR;AAAA,aAArB,CAAhB;;AAEA,gBAAIL,MAAME,OAAN,CAAcI,MAAd,IAAwB,CAA5B,EAA+B;AAC7B,qBAAO,KAAKR,CAAL,CAAOS,IAAP,CAAY,EAACC,MAAM,EAAP,EAAZ,CAAP;AACD;;AAED,gBAAIC,GAAJ;AACA,gBAAID,OAAO,EAACA,MAAK,EAAN,EAAX;AACA,iBAAI,IAAIE,IAAI,CAAZ,EAAeA,IAAIX,QAAQG,OAAR,CAAgBI,MAAnC,EAA2CI,GAA3C,EAAgD;AAC9CD,oBAAM,KAAKE,QAAL,CAAcH,IAAd,EAAoBT,OAApB,EAA6BA,QAAQG,OAAR,CAAgBQ,CAAhB,CAA7B,CAAN;AACD;AACD,mBAAOD,GAAP;AACD;;;mCAEQD,I,EAAMT,O,EAASa,M,EAAQ;AAC9B,gBAAIC,KAAK,IAAT;AACA,mBAAO,KAAKpB,UAAL,CAAgBqB,iBAAhB,CAAkC;AACvClB,mBAAK,KAAKA,GAAL,GAAW,yBAAX,GAAqCgB,OAAOG,IAA5C,GAAiD,GAAjD,GAAqDH,OAAOI,OAA5D,GAAoE,GAApE,GAAwEJ,OAAOK,SAA/E,GACkC,SADlC,GAC4CC,OAAOnB,QAAQoB,KAAR,CAAcC,IAAd,CAAmBC,MAAnB,GAA4BC,OAA5B,KAAsC,IAA7C,EAAmDC,OAAnD,EAD5C,GAEkC,OAFlC,GAE0CL,OAAOnB,QAAQoB,KAAR,CAAcK,EAAd,CAAiBH,MAAjB,GAA0BC,OAA1B,KAAoC,IAA3C,EAAiDC,OAAjD,EAF1C,GAGkC,QAHlC,GAG2CX,OAAOjB,IAJhB;AAKvC8B,sBAAQ,MAL+B;AAMvCC,uBAAS,EAAE,gBAAgB,kBAAlB;AAN8B,aAAlC,EAOJC,IAPI,CAOC,UAASC,MAAT,EAAiB;AAAE,qBAAOf,GAAGgB,eAAH,CAAmBrB,IAAnB,EAAyBoB,MAAzB,EAAiChB,MAAjC,CAAP;AAAkD,aAPtE,CAAP;AAQD;;;0CAEeJ,I,EAAMoB,M,EAAQhB,M,EAAQ;AACpC,gBAAIkB,QAAQlB,OAAOK,SAAnB;AACA,gBAAGL,OAAOkB,KAAV,EAAiB;AACfA,sBAAQlB,OAAOkB,KAAf;AACD;AACDtB,iBAAKA,IAAL,CAAUuB,IAAV,CAAe;AACb,wBAAUD,KADG;AAEb,4BAAcF,OAAOpB,IAAP,CAAY,CAAZ,EAAewB;AAFhB,aAAf;AAIA,mBAAOxB,IAAP;AACD;;;2CAEgB;AACf,mBAAO,KAAKf,UAAL,CAAgBqB,iBAAhB,CAAkC;AACvClB,mBAAK,KAAKA,GAAL,GAAW,gBADuB;AAEvC6B,sBAAQ;AAF+B,aAAlC,EAGJE,IAHI,CAGC,oBAAY;AAClB,kBAAIM,SAASC,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,uBAAO,EAAEA,QAAQ,SAAV,EAAqBC,SAAS,wBAA9B,EAAwDC,OAAO,SAA/D,EAAP;AACD;AACF,aAPM,CAAP;AAQD;;;0CAEerC,O,EAASJ,I,EAAM;AAC7B,gBAAI0C,eAAe;AACjBtB,oBAAM,KAAKrB,WAAL,CAAiB4C,OAAjB,CAAyBvC,QAAQgB,IAAjC,EAAuC,IAAvC,EAA6C,OAA7C;AADW,aAAnB;;AAIA,gBAAIwB,SAAS,KAAKC,kBAAlB;AACA,gBAAI5C,MAAS,KAAKA,GAAL,GAAW,sBAAxB;AACA,gBAAGD,QAAQ,SAAX,EAAsB;AACpBC,oBAAS,KAAKA,GAAL,GAAW,0BAAX,GAAsCG,QAAQgB,IAAvD,EACAwB,SAAS,KAAKE,qBADd;AAED;AACD,gBAAG9C,QAAQ,WAAX,EAAwB;AACtBC,oBAAS,KAAKA,GAAL,GAAW,wBAAX,GAAoCG,QAAQgB,IAA5C,GAAiD,GAAjD,GAAqDhB,QAAQiB,OAAtE,EACAuB,SAAS,KAAKG,uBADd;AAED;;AAED,mBAAO,KAAKjD,UAAL,CAAgBqB,iBAAhB,CAAkC;AACvClB,mBAASA,GAD8B;AAEvCY,oBAAS6B,YAF8B;AAGvCZ,sBAAQ,MAH+B;AAIvCC,uBAAS,EAAE,gBAAgB,kBAAlB;AAJ8B,aAAlC,EAKJC,IALI,CAKCY,MALD,CAAP;AAMD;;;6CAEkBX,M,EAAQ;AACzB,mBAAOvC,EAAEsD,GAAF,CAAMf,OAAOpB,IAAP,CAAYoC,KAAlB,EAAyB,UAACC,CAAD,EAAInC,CAAJ,EAAU;AACxC,qBAAO,EAAEoC,MAAMD,EAAEhD,IAAV,EAAgBkD,OAAOF,EAAEhD,IAAzB,EAAP;AACD,aAFM,CAAP;AAGD;;;gDAEqB+B,M,EAAQ;AAC5B,mBAAOvC,EAAEsD,GAAF,CAAMf,OAAOpB,IAAP,CAAYwC,QAAlB,EAA4B,UAACH,CAAD,EAAInC,CAAJ,EAAU;AAC3C,qBAAO,EAAEoC,MAAMD,EAAEhD,IAAV,EAAgBkD,OAAOF,EAAEhD,IAAzB,EAAP;AACD,aAFM,CAAP;AAGD;;;kDAEuB+B,M,EAAQ;AAC9B,mBAAOvC,EAAEsD,GAAF,CAAMf,OAAOpB,IAAP,CAAYyC,MAAlB,EAA0B,UAACJ,CAAD,EAAInC,CAAJ,EAAU;AACzC,qBAAO,EAAEoC,MAAMD,EAAEhD,IAAV,EAAgBkD,OAAOF,EAAEhD,IAAzB,EAAP;AACD,aAFM,CAAP;AAGD;;;+CAEoBE,O,EAAS;AAAA;;AAC5B;AACAA,oBAAQG,OAAR,GAAkBb,EAAEc,MAAF,CAASJ,QAAQG,OAAjB,EAA0B,kBAAU;AACpD,qBAAOU,OAAOG,IAAP,KAAgB,aAAvB;AACD,aAFiB,CAAlB;AAGAhB,oBAAQG,OAAR,GAAkBb,EAAEc,MAAF,CAASJ,QAAQG,OAAjB,EAA0B,kBAAU;AACpD,qBAAOU,OAAOI,OAAP,KAAmB,gBAA1B;AACD,aAFiB,CAAlB;AAGAjB,oBAAQG,OAAR,GAAkBb,EAAEc,MAAF,CAASJ,QAAQG,OAAjB,EAA0B,kBAAU;AACpD,qBAAOU,OAAOK,SAAP,KAAqB,0BAA5B;AACD,aAFiB,CAAlB;;AAIA,gBAAIf,UAAUb,EAAEsD,GAAF,CAAM5C,QAAQG,OAAd,EAAuB,kBAAU;AAC7C,qBAAO;AACLa,sBAAM,MAAKrB,WAAL,CAAiB4C,OAAjB,CAAyB1B,OAAOG,IAAhC,CADD;AAELC,yBAAS,MAAKtB,WAAL,CAAiB4C,OAAjB,CAAyB1B,OAAOI,OAAhC,CAFJ;AAGLC,2BAAW,MAAKvB,WAAL,CAAiB4C,OAAjB,CAAyB1B,OAAOK,SAAhC,CAHN;AAILa,uBAAO,MAAKpC,WAAL,CAAiB4C,OAAjB,CAAyB1B,OAAOkB,KAAhC,CAJF;AAKLnC,sBAAM,MAAKD,WAAL,CAAiB4C,OAAjB,CAAyB1B,OAAOjB,IAAhC,CALD;AAMLuD,uBAAOtC,OAAOsC,KANT;AAOL7C,sBAAMO,OAAOP;AAPR,eAAP;AASD,aAVa,CAAd;;AAYAN,oBAAQG,OAAR,GAAkBA,OAAlB;;AAEA,mBAAOH,OAAP;AACD","file":"datasource.js","sourcesContent":["import _ from \"lodash\";\n\nexport class GenericDatasource {\n\n  constructor(instanceSettings, $q, backendSrv, templateSrv) {\n    this.type = instanceSettings.type;\n    this.url = instanceSettings.url;\n    this.name = instanceSettings.name;\n    this.q = $q;\n    this.backendSrv = backendSrv;\n    this.templateSrv = templateSrv;\n  }\n\n  query(options) {\n    var query = this.buildQueryParameters(options);\n    query.targets = query.targets.filter(t => !t.hide);\n\n    if (query.targets.length <= 0) {\n      return this.q.when({data: []});\n    }\n\n    var res;\n    var data = {data:[]};\n    for(var i = 0; i < options.targets.length; i++) {\n      res = this.pnpQuery(data, options, options.targets[i]);\n    }\n    return(res);\n  }\n\n  pnpQuery(data, options, target) {\n    var me = this;\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/index.php/api/metrics/'+target.host+'/'+target.service+'/'+target.perflabel\n                                            +'?start='+Number(options.range.from.toDate().getTime()/1000).toFixed()\n                                            +'&end='+Number(options.range.to.toDate().getTime()/1000).toFixed()\n                                            +'&type='+target.type,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(function(result) { return(me.dataQueryMapper(data, result, target)) });\n  }\n\n  dataQueryMapper(data, result, target) {\n    var alias = target.perflabel;\n    if(target.alias) {\n      alias = target.alias;\n    }\n    data.data.push({\n      \"target\": alias,\n      \"datapoints\": result.data[0].datapoints\n    });\n    return(data);\n  }\n\n  testDatasource() {\n    return this.backendSrv.datasourceRequest({\n      url: this.url + '/index.php/api',\n      method: 'GET'\n    }).then(response => {\n      if (response.status === 200) {\n        return { status: \"success\", message: \"Data source is working\", title: \"Success\" };\n      }\n    });\n  }\n\n  metricFindQuery(options, type) {\n    var interpolated = {\n      host: this.templateSrv.replace(options.host, null, 'regex')\n    };\n\n    var mapper = this.mapToTextValueHost;\n    var url    = this.url + '/index.php/api/hosts';\n    if(type == \"service\") {\n      url    = this.url + '/index.php/api/services/'+options.host,\n      mapper = this.mapToTextValueService;\n    }\n    if(type == \"perflabel\") {\n      url    = this.url + '/index.php/api/labels/'+options.host+'/'+options.service,\n      mapper = this.mapToTextValuePerflabel;\n    }\n\n    return this.backendSrv.datasourceRequest({\n      url:     url,\n      data:    interpolated,\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' }\n    }).then(mapper);\n  }\n\n  mapToTextValueHost(result) {\n    return _.map(result.data.hosts, (d, i) => {\n      return { text: d.name, value: d.name };\n    });\n  }\n\n  mapToTextValueService(result) {\n    return _.map(result.data.services, (d, i) => {\n      return { text: d.name, value: d.name };\n    });\n  }\n\n  mapToTextValuePerflabel(result) {\n    return _.map(result.data.labels, (d, i) => {\n      return { text: d.name, value: d.name };\n    });\n  }\n\n  buildQueryParameters(options) {\n    //remove placeholder targets\n    options.targets = _.filter(options.targets, target => {\n      return target.host !== 'select host';\n    });\n    options.targets = _.filter(options.targets, target => {\n      return target.service !== 'select service';\n    });\n    options.targets = _.filter(options.targets, target => {\n      return target.perflabel !== 'select performance label';\n    });\n\n    var targets = _.map(options.targets, target => {\n      return {\n        host: this.templateSrv.replace(target.host),\n        service: this.templateSrv.replace(target.service),\n        perflabel: this.templateSrv.replace(target.perflabel),\n        alias: this.templateSrv.replace(target.alias),\n        type: this.templateSrv.replace(target.type),\n        refId: target.refId,\n        hide: target.hide\n      };\n    });\n\n    options.targets = targets;\n\n    return options;\n  }\n}\n"]}